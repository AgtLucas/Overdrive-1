{"intro.html":{"name":"Intro"},"license.html":{"name":"License"},"Enums/TaskConditionError.html#/s:FO9Overdrive18TaskConditionError8combinedFMS0_FT6errorsGSaPs5Error___S0_":{"name":"combined","abstract":"<p>Combined errors</p>","parent_name":"TaskConditionError"},"Enums/TaskConditionResult.html#/s:FO9Overdrive19TaskConditionResult9satisfiedFMS0_S0_":{"name":"satisfied","abstract":"<p>Task conditions is satisfied</p>","parent_name":"TaskConditionResult"},"Enums/TaskConditionResult.html#/s:FO9Overdrive19TaskConditionResult6failedFMS0_FPs5Error_S0_":{"name":"failed","abstract":"<p>Task condition failed with error</p>","parent_name":"TaskConditionResult"},"Enums/Result.html#/s:FO9Overdrive6Result5valueurFMGS0_x_FxGS0_x_":{"name":"value","abstract":"<p>Value with associated type <code>T</code></p>","parent_name":"Result"},"Enums/Result.html#/s:FO9Overdrive6Result5errorurFMGS0_x_FPs5Error_GS0_x_":{"name":"error","abstract":"<p>Error case with associated <code>ErrorType</code></p>","parent_name":"Result"},"Enums/Result.html#/s:FO9Overdrive6ResultcFxGS0_x_":{"name":"init(_:)","abstract":"Undocumented","parent_name":"Result"},"Enums/Result.html#/s:FO9Overdrive6ResultcFPs5Error_GS0_x_":{"name":"init(_:)","abstract":"Undocumented","parent_name":"Result"},"Enums/Result.html#/s:vO9Overdrive6Result5valueGSqx_":{"name":"value","abstract":"<p>Returns value <code>T</code></p>","parent_name":"Result"},"Enums/Result.html#/s:vO9Overdrive6Result5errorGSqPs5Error__":{"name":"error","abstract":"<p>Returns error value</p>","parent_name":"Result"},"Enums/Result.html#/s:FO9Overdrive6Result7flatMapurFzFzxGS0_qd___GS0_qd___":{"name":"flatMap(_:)","abstract":"<p>Flat map over the result value</p>","parent_name":"Result"},"Enums/Result.html#/s:FO9Overdrive6Result12flatMapErrorFzFzPs5Error_GS0_x_GS0_x_":{"name":"flatMapError(_:)","abstract":"<p>Flat map over result error</p>","parent_name":"Result"},"Enums/Result.html#/s:FO9Overdrive6Result3mapurFzFzxqd__GS0_qd___":{"name":"map(_:)","abstract":"<p>Maps over result</p>","parent_name":"Result"},"Enums/Result.html#/s:FO9Overdrive6Result8mapErroruRd__s5ErrorrFzFzPS1__qd__GS0_x_":{"name":"mapError(_:)","abstract":"<p>Map over task error</p>","parent_name":"Result"},"Enums/Result.html#/s:vO9Overdrive6Result11descriptionSS":{"name":"description","abstract":"<p>Returns textual representation of <code>self</code></p>","parent_name":"Result"},"Enums/Result.html":{"name":"Result","abstract":"<p>Task result definition. <code>Result&lt;T&gt;</code> is one of the fundamental concepts in"},"Enums/TaskConditionResult.html":{"name":"TaskConditionResult","abstract":"<p>Defines task condition result that is returned in the process of evaluating"},"Enums/TaskConditionError.html":{"name":"TaskConditionError","abstract":"<p>Defines errors that can be thrown when condition evaluation finishes</p>"},"Protocols/TaskQueueDelegate.html#/s:FP9Overdrive17TaskQueueDelegate6didAddurFT4taskGCS_4Taskqd___2toCS_9TaskQueue_T_":{"name":"didAdd(task:to:)","abstract":"<p>Notifies receiver that the task was added to the queue.</p>","parent_name":"TaskQueueDelegate"},"Protocols/TaskQueueDelegate.html#/s:FP9Overdrive17TaskQueueDelegate9didFinishurFT4taskGCS_4Taskqd___2inCS_9TaskQueue_T_":{"name":"didFinish(task:in:)","abstract":"<p>Notifies receiver that the task finished with execution</p>","parent_name":"TaskQueueDelegate"},"Protocols/TaskQueueDelegate.html#/s:FP9Overdrive17TaskQueueDelegate10willFinishurFT4taskGCS_4Taskqd___2inCS_9TaskQueue_T_":{"name":"willFinish(task:in:)","abstract":"<p>Notifies receiver that the task is about to finish executing</p>","parent_name":"TaskQueueDelegate"},"Protocols/TaskCondition.html#/s:vP9Overdrive13TaskCondition13conditionNameSS":{"name":"conditionName","abstract":"<p>Condition name. Defaults to conforming instance name</p>","parent_name":"TaskCondition"},"Protocols/TaskCondition.html#/s:FP9Overdrive13TaskCondition12dependenciesurFT7forTaskGCS_4Taskqd____GSaCSo9Operation_":{"name":"dependencies(forTask:)","abstract":"<p>If task needs a dependency to execute, you should return it in this method. For example,","parent_name":"TaskCondition"},"Protocols/TaskCondition.html#/s:FP9Overdrive13TaskCondition8evaluateurFT7forTaskGCS_4Taskqd___15evaluationBlockFOS_19TaskConditionResultT__T_":{"name":"evaluate(forTask:evaluationBlock:)","abstract":"<p>Evaluates condition for the task. When evaluation process is finished","parent_name":"TaskCondition"},"Protocols/TaskObserver.html#/s:FP9Overdrive12TaskObserver21taskDidStartExecutionurFGCS_4Taskqd___T_":{"name":"taskDidStartExecution(_:)","abstract":"<p>Notifies receiver that task began execution</p>","parent_name":"TaskObserver"},"Protocols/TaskObserver.html#/s:FP9Overdrive12TaskObserver22taskDidFinishExecutionurFGCS_4Taskqd___T_":{"name":"taskDidFinishExecution(_:)","abstract":"<p>Notifies receiver that task finished execution</p>","parent_name":"TaskObserver"},"Protocols/TaskObserver.html#/s:FP9Overdrive12TaskObserver23taskWillFinishExecutionurFGCS_4Taskqd___T_":{"name":"taskWillFinishExecution(_:)","abstract":"<p>Notifies receiver that task finished execution</p>","parent_name":"TaskObserver"},"Protocols/TaskObserver.html#/s:vE9OverdrivePS_12TaskObserver12observerNameSS":{"name":"observerName","abstract":"<p>Observer name, returns conforming type name (read-only)</p>","parent_name":"TaskObserver"},"Protocols/TaskObserver.html":{"name":"TaskObserver","abstract":"<p>Protocol that types implement in order to be notified of significant events"},"Protocols/TaskCondition.html":{"name":"TaskCondition","abstract":"<p>Defines protocol that can be used to define conditions that should be satisfied in order"},"Protocols/TaskQueueDelegate.html":{"name":"TaskQueueDelegate","abstract":"<p>Delegate of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/TaskQueue.html\">TaskQueue</a></code> that can respond to certain <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/TaskQueue.html\">TaskQueue</a></code> events</p>"},"Classes/InlineTask.html#/s:FC9Overdrive10InlineTaskcFFT_T_S0_":{"name":"init(_:)","abstract":"<p>Initializes <code>InlineTask</code> with closure block.</p>","parent_name":"InlineTask"},"Classes/InlineTask.html#/s:FC9Overdrive10InlineTask3runFT_T_":{"name":"run()","abstract":"<p>Starts execution of the task</p>","parent_name":"InlineTask"},"Classes/TaskQueue.html#/s:ZvC9Overdrive9TaskQueue4mainS0_":{"name":"main","abstract":"<p>Returns queue associated with application main queue.</p>","parent_name":"TaskQueue"},"Classes/TaskQueue.html#/s:ZvC9Overdrive9TaskQueue10backgroundS0_":{"name":"background","abstract":"<p>Returns queue associated with application background queue.</p>","parent_name":"TaskQueue"},"Classes/TaskQueue.html#/s:vC9Overdrive9TaskQueue8delegateXwGSqPS_17TaskQueueDelegate__":{"name":"delegate","abstract":"<p>TaskQueue delegate object</p>","parent_name":"TaskQueue"},"Classes/TaskQueue.html#/s:vC9Overdrive9TaskQueue11isSuspendedSb":{"name":"isSuspended","abstract":"<p>Boolean indicating if queue is actively scheduling tasks execution</p>","parent_name":"TaskQueue"},"Classes/TaskQueue.html#/s:vC9Overdrive9TaskQueue5tasksGSaCSo9Operation_":{"name":"tasks","abstract":"<p>Returns all active tasks in the queue</p>","parent_name":"TaskQueue"},"Classes/TaskQueue.html#/s:vC9Overdrive9TaskQueue3qosOSC16QualityOfService":{"name":"qos","abstract":"<p>Specifies service level that is used in executing tasks","parent_name":"TaskQueue"},"Classes/TaskQueue.html#/s:vC9Overdrive9TaskQueue4nameGSqSS_":{"name":"name","abstract":"<p>Queue name identifier</p>","parent_name":"TaskQueue"},"Classes/TaskQueue.html#/s:vC9Overdrive9TaskQueue22maxConcurrentTaskCountSi":{"name":"maxConcurrentTaskCount","abstract":"<p>The maximum number of tasks that can be executed at the same time","parent_name":"TaskQueue"},"Classes/TaskQueue.html#/s:FC9Overdrive9TaskQueuecFT_S0_":{"name":"init()","abstract":"<p>Creates instance of <code>TaskQueue</code></p>","parent_name":"TaskQueue"},"Classes/TaskQueue.html#/s:FC9Overdrive9TaskQueuecFT3qosOSC16QualityOfService_S0_":{"name":"init(qos:)","abstract":"<p>Initilizes TaskQueue with specific <code>NSQualityOfService</code> class. Defining","parent_name":"TaskQueue"},"Classes/TaskQueue.html#/s:FC9Overdrive9TaskQueuecFT5queueCSo13DispatchQueue_S0_":{"name":"init(queue:)","abstract":"<p>Initializes TaskQueue with specific dispatch queue.</p>","parent_name":"TaskQueue"},"Classes/TaskQueue.html#/s:FC9Overdrive9TaskQueue3addurFT4taskGCS_4Taskx__T_":{"name":"add(task:)","abstract":"<p>Add task to the TaskQueue and starts execution. Method will call","parent_name":"TaskQueue"},"Classes/TaskQueue.html#/s:vPs23CustomStringConvertible11descriptionSS":{"name":"description","parent_name":"TaskQueue"},"Classes/TaskQueue.html#/s:vPs28CustomDebugStringConvertible16debugDescriptionSS":{"name":"debugDescription","parent_name":"TaskQueue"},"Classes/Task.html#/s:vC9Overdrive4Task6resultGSqGOS_6Resultx__":{"name":"result","abstract":"<p>Task result. Result can contain either value or error.</p>","parent_name":"Task"},"Classes/Task.html#/s:FC9Overdrive4Task7onValueFFzxT_DGS0_x_":{"name":"onValue(_:)","abstract":"<p>Use this method to set completion block that will be executed when task","parent_name":"Task"},"Classes/Task.html#/s:FC9Overdrive4Task7onErrorFFPs5Error_T_DGS0_x_":{"name":"onError(_:)","abstract":"<p>Use this method to set completion block that will be executed when task","parent_name":"Task"},"Classes/Task.html#/s:vC9Overdrive4Task15completionBlockGSqFT_T__":{"name":"completionBlock","abstract":"<p>Completion block that will be executed when the task finishes execution.</p>","parent_name":"Task"},"Classes/Task.html#/s:FC9Overdrive4Task5retryFSiDGS0_x_":{"name":"retry(_:)","abstract":"<p>Set retry count. If the task finishes with error, it will be executed","parent_name":"Task"},"Classes/Task.html#/s:vC9Overdrive4Task10conditionsGSaPS_13TaskCondition__":{"name":"conditions","abstract":"<p>All task conditions</p>","parent_name":"Task"},"Classes/Task.html#/s:FC9Overdrive4Task3addFT9conditionPS_13TaskCondition__T_":{"name":"add(condition:)","abstract":"<p>Adds condition to the task.</p>","parent_name":"Task"},"Classes/Task.html#/s:FC9Overdrive4Task6removeFT9conditionPS_13TaskCondition__Sb":{"name":"remove(condition:)","abstract":"<p>Removes condition from the task.</p>","parent_name":"Task"},"Classes/Task.html#/s:FC9Overdrive4Task6removeuRd__S_13TaskConditionrFT9conditionMqd___Sb":{"name":"remove(condition:)","abstract":"<p>Removes all conditions of given type.</p>","parent_name":"Task"},"Classes/Task.html#/s:vC9Overdrive4Task9observersGSaPS_12TaskObserver__":{"name":"observers","abstract":"<p>Array of all task observers (read-only).</p>","parent_name":"Task"},"Classes/Task.html#/s:FC9Overdrive4Task3addFT8observerPS_12TaskObserver__T_":{"name":"add(observer:)","abstract":"<p>Adds observer to the task.</p>","parent_name":"Task"},"Classes/Task.html#/s:FC9Overdrive4Task8containsuRd__S_12TaskObserverrFT8observerMqd___Sb":{"name":"contains(observer:)","abstract":"<p>Checks if task constains observer of specific <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/TaskObserver.html\">TaskObserver</a></code> type</p>","parent_name":"Task"},"Classes/Task.html#/s:FC9Overdrive4Task6removeFT8observerPS_12TaskObserver__Sb":{"name":"remove(observer:)","abstract":"<p>Removes task observer from the task observers.</p>","parent_name":"Task"},"Classes/Task.html#/s:FC9Overdrive4Task6removeuRd__S_12TaskObserverrFT8observerMqd___Sb":{"name":"remove(observer:)","abstract":"<p>Remove all task observers of the defined TaskObserver type. This method will enumerate","parent_name":"Task"},"Classes/Task.html#/s:FC9Overdrive4Task6finishFT4withGOS_6Resultx__T_":{"name":"finish(with:)","abstract":"<p>Finish execution of the task with result. Calling this method will change","parent_name":"Task"},"Classes/Task.html#/s:vC9Overdrive4Task14isAsynchronousSb":{"name":"isAsynchronous","abstract":"<p>Defines if task should handle state automatically. Defaults to true.</p>","parent_name":"Task"},"Classes/Task.html#/s:vC9Overdrive4Task7isReadySb":{"name":"isReady","abstract":"<p>Boolean value indicating Task readiness value</p>","parent_name":"Task"},"Classes/Task.html#/s:vC9Overdrive4Task11isExecutingSb":{"name":"isExecuting","abstract":"<p>Boolean value indicating Task execution status.</p>","parent_name":"Task"},"Classes/Task.html#/s:vC9Overdrive4Task10isFinishedSb":{"name":"isFinished","abstract":"<p>Boolean value indicating if task finished with execution.</p>","parent_name":"Task"},"Classes/Task.html#/s:FC9Overdrive4Task5startFT_T_":{"name":"start()","abstract":"<p>Starts task execution process when task reaches <code>ready</code> state.</p>","parent_name":"Task"},"Classes/Task.html#/s:FC9Overdrive4Task4mainFT_T_":{"name":"main()","abstract":"<p>Starts task execution by being called from the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Task.html#/s:FC9Overdrive4Task5startFT_T_\">start()</a></code> method. If the task is","parent_name":"Task"},"Classes/Task.html#/s:FC9Overdrive4Task3runFT_T_":{"name":"run()","abstract":"<p>You must override this method in order to provide execution point for the","parent_name":"Task"},"Classes/Task.html#/s:FC9Overdrive4TaskcFT12dependenciesGSaCSo9Operation_9observersGSaPS_12TaskObserver__10conditionsGSaPS_13TaskCondition___GS0_x_":{"name":"init(dependencies:observers:conditions:)","abstract":"<p>Create new instance of <code>Task&lt;T&gt;</code></p>","parent_name":"Task"},"Classes/Task.html#/s:FC9Overdrive4Task3addurFT10dependencyGS0_qd____T_":{"name":"add(dependency:)","abstract":"<p>Makes the task dependant on completion of specific task.","parent_name":"Task"},"Classes/Task.html#/s:FC9Overdrive4Task3geturFT10dependencyMGS0_qd____GSaGS0_qd____":{"name":"get(dependency:)","abstract":"<p>Returns dependency instances from the task dependencies.</p>","parent_name":"Task"},"Classes/Task.html#/s:FC9Overdrive4Task6removeFT10dependencyCSo9Operation_Sb":{"name":"remove(dependency:)","abstract":"<p>Removes dependency from <code>self</code></p>","parent_name":"Task"},"Classes/Task.html#/s:FC9Overdrive4Task6removeurFT10dependencyMGS0_qd____T_":{"name":"remove(dependency:)","abstract":"<p>Removes dependency with specified type</p>","parent_name":"Task"},"Classes/Task.html#/s:ZFC9Overdrive4Task6createFFT_T_CS_10InlineTask":{"name":"create(_:)","abstract":"<p>Create inline task with completion block</p>","parent_name":"Task"},"Classes/Task.html":{"name":"Task","abstract":"<p><code>Task&lt;T&gt;</code> is an abstract class that provides interface for encapsuling any"},"Classes/TaskQueue.html":{"name":"TaskQueue","abstract":"<p>Provides interface for <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Task.html\">Task&lt;T&gt;</a></code> execution and concurrency.</p>"},"Classes/InlineTask.html":{"name":"InlineTask","abstract":"<p><code>InlineTask</code> provides interface for creating asynchronous taks that don&rsquo;t"},"Classes.html#/s:C9Overdrive8TaskBase":{"name":"TaskBase","abstract":"<p>Base class of <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/Task.html\">Task&lt;T&gt;</a></code>, responsible for state management.</p>"},"getting-started.html":{"name":"Getting Started"},"installation.html":{"name":"Installation"},"state-machine.html":{"name":"State Machine"},"complex-tasks.html":{"name":"Complex Tasks"},"unit-testing.html":{"name":"Unit Testing"},"Intro.html":{"name":"Intro"},"Classes.html":{"name":"Classes"},"Protocols.html":{"name":"Protocols"},"Enums.html":{"name":"Enums"},"More information.html":{"name":"More information"},"Other Guides.html":{"name":"Other Guides","abstract":"The following guides are available globally."}}